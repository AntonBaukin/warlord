<?xml version = '1.0' encoding = 'UTF-8'?>

<web-app version = '3.0'
  xmlns = 'http://java.sun.com/xml/ns/javaee'
  xmlns:xsi          = 'http://www.w3.org/2001/XMLSchema-instance'
  xsi:schemaLocation = 'http://java.sun.com/xml/ns/javaee
    http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd'>

  <display-name>
    JavsServer Faces with ExtJS Demo Application
  </display-name>


  <!--====================================================
    =                 Context Parameters                 =
    ====================================================-->

  <context-param>
    <description>
      This parameter forbids implicit startup of the Log4j2
      environment. The implementation is moved to the system
      boot intializer instead. If allow Log4j to start itself,
      it may be turned off before all else modules of the
      application done their logging thus damaging the main
      logging files of the server.
    </description>

    <param-name>isLog4jAutoInitializationDisabled</param-name>
    <param-value>true</param-value>
  </context-param>


  <!--====================================================
    =                      Listeners                     =
    ====================================================-->

  <!-- System Boot Initializer -->

  <listener>
    <description>
      The first listener activated during
      the web application startup. Does not
      connect components via Spring services.
    </description>

    <display-name>System Boot Initializer</display-name>
    <listener-class>
      net.java.jsf.extjs.servlet.listeners.SystemBootListener
    </listener-class>
  </listener>


  <!-- Spring Context and Request Listeners -->

  <listener>
    <description>
      Spring framework startup initialization.
    </description>

    <display-name>Spring Startup Context Listener</display-name>
    <listener-class>
      org.springframework.web.context.ContextLoaderListener
    </listener-class>
  </listener>

  <listener>
    <description>
      Initializes the request context for Spring framework.
    </description>

    <display-name>Spring Request Context Listener</display-name>
    <listener-class>
      org.springframework.web.context.request.RequestContextListener
    </listener-class>
  </listener>


  <!-- Java Server Faces (Mojarra RI) Listener -->

  <listener>
    <description>
      JavaServer Faces application lifecycle listener.
    </description>

    <display-name>Java Server Faces Configure</display-name>
    <listener-class>
      com.sun.faces.application.WebappLifecycleListener
    </listener-class>
  </listener>


  <!-- Web Application Context Initializer -->

  <listener>
    <description>
      Initializes the application's modules.
      This listener is a bridge to the collection
      of listeners defined within the application.
    </description>

    <display-name>Web Application Context Initializer</display-name>
    <listener-class>
      net.java.jsf.extjs.servlet.listeners.ContextListenersBridge
    </listener-class>
  </listener>


  <!--====================================================
    =            Java Server Faces Configuration         =
    ====================================================-->

  <context-param>
    <param-name>javax.faces.CONFIG_FILES</param-name>
    <param-value>
      /WEB-INF/faces-config.xml,
      /WEB-INF/faces-nav.xml
    </param-value>
  </context-param>

  <!--
    WARNING! Present implementation of ExtJSF components
    has this parameter fixed to '-' dash!
  -->
  <context-param>
    <param-name>javax.faces.SEPARATOR_CHAR</param-name>
    <param-value>-</param-value>
  </context-param>

  <context-param>
    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
    <param-value>client</param-value>
  </context-param>

  <context-param>
    <param-name>javax.faces.PROJECT_STAGE</param-name>
    <param-value>Development</param-value>
  </context-param>

  <context-param>
    <param-name>javax.faces.FACELETS_REFRESH_PERIOD</param-name>
    <param-value>0</param-value>
  </context-param>

  <context-param>
    <param-name>com.sun.faces.disableIdUniquenessCheck</param-name>
    <param-value>true</param-value>
  </context-param>


  <!--====================================================
    =                      Servlets                      =
    ====================================================-->

  <!-- JavaServer Faces Servlet -->

  <servlet>
    <display-name>JavaServer Faces 2.x Servlet</display-name>
    <servlet-name>FacesServlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>FacesServlet</servlet-name>
    <url-pattern>*.xhtml</url-pattern>
  </servlet-mapping>


  <!--===================================================
   =                  Filters Bridge                    =
   ====================================================-->

  <filter>
    <description>
      Connects filters processing of the web container
      with the application-level filters.
    </description>

    <filter-name>Filters Bridge</filter-name>

    <filter-class>
      net.java.jsf.extjs.servlet.filters.FiltersBridge
    </filter-class>
  </filter>

  <filter-mapping>
    <filter-name>Filters Bridge</filter-name>

    <url-pattern>/*</url-pattern>

    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
    <dispatcher>INCLUDE</dispatcher>
    <dispatcher>ERROR</dispatcher>
  </filter-mapping>


  <!--====================================================
    = JSP Engine Configuration                           =
    ====================================================-->

  <jsp-config>
    <jsp-property-group>
      <url-pattern>*.jsp</url-pattern>
      <url-pattern>*.jspf</url-pattern>

      <page-encoding>UTF-8</page-encoding>
    </jsp-property-group>
  </jsp-config>

  <session-config>
    <!-- 30 minutes -->
    <session-timeout>30</session-timeout>
  </session-config>
</web-app>